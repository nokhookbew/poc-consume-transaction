spring.application.name=poc-consume-transaction
#server.port=9900
# Kafka Broker Address
spring.cloud.stream.kafka.binder.brokers=host.docker.internal:9092

spring.kafka.consumer.properties.jmx.enabled=false
spring.kafka.producer.properties.jmx.enabled=false

# Consumer Binding (Listen to `user-topic`)
spring.cloud.function.definition=processMessage;submitMessage
spring.cloud.stream.bindings.processMessage-in-0.destination=record-topic
spring.cloud.stream.bindings.processMessage-in-0.group=record-topic
spring.cloud.stream.bindings.processMessage-in-0.content-type=application/json

# Kafka Binder Configuration for Spring Cloud Stream
#spring.cloud.function.definition=processMessage
spring.cloud.stream.bindings.submitMessage-in-0.destination=submit-topic
spring.cloud.stream.bindings.submitMessage-in-0.group=submit-topic
spring.cloud.stream.bindings.submitMessage-in-0.content-type=application/json

# Publisher
# spring cloud stream config
spring.cloud.stream.bindings.submitOutput.destination=submit-topic
spring.cloud.stream.bindings.submitOutput.content-type=application/json

# Database
# jdbc:postgresql://localhost:5432/postgres?currentSchema=${schema.name}
#spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/mydatabase?currentSchema=myapp
spring.datasource.url=jdbc:postgresql://localhost:5432/mydatabase?currentSchema=myapp
spring.datasource.username=myuser
spring.datasource.password=mypassword
spring.datasource.driver-class-name=org.postgresql.Driver

# Optimize JDBC Batch Inserts
spring.datasource.hikari.maximum-pool-size=10
spring.jpa.properties.hibernate.jdbc.batch_size=1000
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true